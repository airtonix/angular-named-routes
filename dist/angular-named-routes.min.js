(function(){angular.module("zj.namedRoutes",[]).provider("$NamedRouteService",["$locationProvider",function(e){return this.$get=["$rootScope","$route","$location","$log",function(r,t,n,o){var u,i,a;return u={manyFound:function(e){return"Multiple routes matching "+e+" were found"},notFound:function(e){return"Route "+routeName+" not found"},unresolvable:function(){return"Can not resolve undefined into a route"}},a=function(e){var r;return void 0===e||null===e?String(e):(r={"[object Boolean]":"boolean","[object Number]":"number","[object String]":"string","[object Function]":"function","[object Array]":"array","[object Date]":"date","[object RegExp]":"regexp","[object Object]":"object"},r[Object.prototype.toString.call(e)])},i={isHtml5Mode:function(){var r;return r=e.html5Mode(),"boolean"==typeof r?r:r&&r.enabled},getPrefix:function(){var r;return r="",this.isHtml5Mode()||(r="#"+e.hashPrefix()),r},reverse:function(e,r){var t;if(t=i.match(e),1===t.length)return i.resolve(t[0],r);throw 0===t.length?new Error(u.notFound(e)):new Error(u.manyFound(e))},match:function(e){var r;return r=[],angular.forEach(t.routes,function(t,n){if(t.name===e)return r.push(n)}),r},resolve:function(e,r){var t,n;if(n=/(\:\w+\*?)/g,void 0===e)throw new Error(u.unresolvable(routeName));return t=0,this.getPrefix()+e.replace(n,function(){var e,n,o;return e=arguments[0],n=arguments[arguments.length-1],"*"===e.charAt(e.length-1)&&(e=e.substring(0,e.length-1)),"array"===a(r)?(o=r[t],t++):"object"===a(r)&&(o=r[e.slice(1)]),o})}}}],this}]).directive("namedRoute",["$log","$NamedRouteService",function(e,r){return{restrict:"AC",link:function(e,t,n){var o,u,i,a;i={};for(o in n)0===o.indexOf("kwarg")&&(u=o.slice(5),u=u.charAt(0).toLowerCase()+u.slice(1),i[u]=n[o]);null!=n.args&&(i=n.args.replace(/[\[\]\"\'\s]+/g,"").split(",")),a=r.reverse(n.namedRoute,i),t.attr("href",a)}}}]).filter("route",["$route","$NamedRouteService",function(e,r){return function(e,t){return r.reverse(e,t)}}])}).call(this);
//# sourceMappingURL=./dist/angular-named-routes.min.map